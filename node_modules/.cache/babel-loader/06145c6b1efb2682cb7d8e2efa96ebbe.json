{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spreadArrays } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n/**\r\n * Domain name for firebase storage.\r\n */\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FirebaseStorageError = /** @class */function () {\n  function FirebaseStorageError(code, message) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n  FirebaseStorageError.prototype.codeProp = function () {\n    return this.code;\n  };\n  FirebaseStorageError.prototype.codeEquals = function (code) {\n    return prependCode(code) === this.codeProp();\n  };\n  FirebaseStorageError.prototype.serverResponseProp = function () {\n    return this.serverResponse_;\n  };\n  FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\n    this.serverResponse_ = serverResponse;\n  };\n  Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\n    get: function () {\n      return this.name_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\n    get: function () {\n      return this.code_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    get: function () {\n      if (this.serverResponse_) {\n        return this.message_ + '\\n' + this.serverResponse_;\n      } else {\n        return this.message_;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    get: function () {\n      return this.serverResponse_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}();\nvar Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\n}\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\nfunction unauthorized(path) {\n  return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\n}\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\n}\nfunction canceled() {\n  return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\n}\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\n}\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\n}\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\n}\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\n}\nfunction noDownloadURL() {\n  return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\n}\nfunction invalidArgument(index, fnName, message) {\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\n}\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\n  var countPart;\n  var plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');\n}\nfunction appDeleted() {\n  return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message A message describing the internal error.\r\n */\nfunction internalError(message) {\n  throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\nfunction formatValidator(stringFormat) {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n    default:\n      throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';\n  }\n}\n/**\r\n * @struct\r\n */\nvar StringData = /** @class */function () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n  return StringData;\n}();\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  }\n  // assert(false);\n  throw unknown();\n}\nfunction utf8Bytes_(value) {\n  var b = [];\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\nfunction percentEncodedBytes_(value) {\n  var decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n        break;\n      }\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  var array = new Uint8Array(bytes.length);\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n/**\r\n * @struct\r\n */\nvar DataURLParts = /** @class */function () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n    var middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n  return DataURLParts;\n}();\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n  return s.substring(s.length - end.length) === end;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\nvar InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\nfunction isDef(p) {\n  return p != null;\n}\nfunction isJustDef(p) {\n  return p !== void 0;\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\nfunction isObject(p) {\n  return typeof p === 'object';\n}\nfunction isNonNullObject(p) {\n  return isObject(p) && p !== null;\n}\nfunction isNonArrayObject(p) {\n  return isObject(p) && !Array.isArray(p);\n}\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\nfunction isInteger(p) {\n  return isNumber(p) && Number.isInteger(p);\n}\nfunction isNumber(p) {\n  return typeof p === 'number' || p instanceof Number;\n}\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @enum{number}\r\n */\nvar ErrorCode;\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\nvar NetworkXhrIo = /** @class */function () {\n  function NetworkXhrIo() {\n    var _this = this;\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve(_this);\n      });\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(_this);\n      });\n      _this.xhr_.addEventListener('load', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (isDef(headers)) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n  return NetworkXhrIo;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\nvar XhrIoPool = /** @class */function () {\n  function XhrIoPool() {}\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n  return XhrIoPool;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\nfunction getBlob() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\nvar FbsBlob = /** @class */function () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n  FbsBlob.getBlob = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n  return FbsBlob;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @struct\r\n */\nvar Location = /** @class */function () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function () {\n      return this.path_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function () {\n      return this.path.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    var gsPath = '(/(.*))?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    var version = 'v[A-Za-z0-9_]+';\n    var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\n    var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\n    var firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\n    var cloudStoragePath = '([^?#]*)';\n    var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\n    var cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  };\n  return Location;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\nfunction jsonObjectOrNull(s) {\n  var obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n/**\r\n * @return Null if the path is already at the root.\r\n */\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n  var index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  var newPath = path.slice(0, index);\n  return newPath;\n}\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction makeUrl(urlPart) {\n  return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\n}\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction noXform_(metadata, value) {\n  return value;\n}\n/**\r\n * @struct\r\n */\nvar Mapping = /** @class */function () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n  return Mapping;\n}();\nvar mappings_ = null;\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n  function xformSize(_metadata, size) {\n    if (isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\nfunction addRef(metadata, service) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return service.makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\nfunction fromResource(service, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n  addRef(metadata, service);\n  return metadata;\n}\nfunction fromResourceString(service, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  var resource = obj;\n  return fromResource(service, resource, mappings);\n}\nfunction downloadUrlFromResourceString(metadata, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  var tokens = obj['downloadTokens'];\n  if (tokens.length === 0) {\n    return null;\n  }\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\nfunction metadataValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n  for (var key in p) {\n    if (p.hasOwnProperty(key)) {\n      var val = p[key];\n      if (key === 'customMetadata') {\n        if (!isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar MAX_RESULTS_KEY = 'maxResults';\nvar MAX_MAX_RESULTS = 1000;\nvar PAGE_TOKEN_KEY = 'pageToken';\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\nfunction fromBackendResponse(service, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n      listResult.prefixes.push(reference);\n    }\n  }\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n      var reference = service.makeStorageReference(new Location(bucket, item['name']));\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\nfunction fromResponseString(service, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  var resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\nfunction listOptionsValidator(p) {\n  if (!isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n  for (var key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (!isInteger(p[MAX_RESULTS_KEY]) || p[MAX_RESULTS_KEY] <= 0) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n      if (p[MAX_RESULTS_KEY] > 1000) {\n        throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\nvar RequestInfo = /** @class */function () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n  return RequestInfo;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n  return handler;\n}\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n  return handler;\n}\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text);\n  }\n  return handler;\n}\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\nfunction getMetadata(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\nfunction list(service, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\nfunction getDownloadUrl(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\nfunction updateMetadata(service, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\nfunction deleteObject(service, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = service.maxOperationRetryTime;\n  function handler(_xhr, _text) {}\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n  function genBoundary() {\n    var str = '';\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\nvar ResumableUploadStatus = /** @class */function () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n  return ResumableUploadStatus;\n}();\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = service.maxUploadRetryTime;\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url;\n  }\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\nfunction getResumableUploadStatus(service, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\nvar resumableUploadChunkSize = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @struct\r\n */\nvar Observer = /** @class */function () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || isDef(error) || isDef(complete);\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n  return Observer;\n}();\nvar UploadTaskSnapshot = /** @class */function () {\n  function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\n    this.bytesTransferred = bytesTransferred;\n    this.totalBytes = totalBytes;\n    this.state = state;\n    this.metadata = metadata;\n    this.task = task;\n    this.ref = ref;\n  }\n  return UploadTaskSnapshot;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\nfunction validate(name, specs, passed) {\n  var minArgs = specs.length;\n  var maxArgs = specs.length;\n  for (var i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n  var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n  if (!validLength) {\n    throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n  }\n  for (var i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw invalidArgument(i, name, e.message);\n      } else {\n        throw invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n/**\r\n * @struct\r\n */\nvar ArgSpec = /** @class */function () {\n  function ArgSpec(validator, optional) {\n    var self = this;\n    this.validator = function (p) {\n      if (self.optional && !isJustDef(p)) {\n        return;\n      }\n      validator(p);\n    };\n    this.optional = !!optional;\n  }\n  return ArgSpec;\n}();\nfunction and_(v1, v2) {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\nfunction stringSpec(validator, optional) {\n  function stringValidator(p) {\n    if (!isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n  var chainedValidator;\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n  return new ArgSpec(chainedValidator, optional);\n}\nfunction uploadDataSpec() {\n  function validator(p) {\n    var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || isNativeBlobDefined() && p instanceof Blob;\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n  return new ArgSpec(validator);\n}\nfunction metadataSpec(optional) {\n  return new ArgSpec(metadataValidator, optional);\n}\nfunction listOptionSpec(optional) {\n  return new ArgSpec(listOptionsValidator, optional);\n}\nfunction nonNegativeNumberSpec() {\n  function validator(p) {\n    var valid = isNumber(p) && p >= 0;\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n  return new ArgSpec(validator);\n}\nfunction looseObjectSpec(validator, optional) {\n  function isLooseObjectValidator(p) {\n    var isLooseObject = p === null || isDef(p) && p instanceof Object;\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\nfunction nullFunctionSpec(optional) {\n  function validator(p) {\n    var valid = p === null || isFunction(p);\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n  return new ArgSpec(validator, optional);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\nvar UploadTask = /** @class */function () {\n  /**\r\n   * @param ref The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob The blob to upload.\r\n   */\n  function UploadTask(ref, service, location, mappings, blob, metadata) {\n    var _this = this;\n    if (metadata === void 0) {\n      metadata = null;\n    }\n    this.transferred_ = 0;\n    this.needToFetchStatus_ = false;\n    this.needToFetchMetadata_ = false;\n    this.observers_ = [];\n    this.error_ = null;\n    this.uploadUrl_ = null;\n    this.request_ = null;\n    this.chunkMultiplier_ = 1;\n    this.resolve_ = null;\n    this.reject_ = null;\n    this.ref_ = ref;\n    this.service_ = service;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n    this.errorHandler_ = function (error) {\n      _this.request_ = null;\n      _this.chunkMultiplier_ = 1;\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.needToFetchStatus_ = true;\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.metadataErrorHandler_ = function (error) {\n      _this.request_ = null;\n      if (error.codeEquals(Code.CANCELED)) {\n        _this.completeTransitions_();\n      } else {\n        _this.error_ = error;\n        _this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n      _this.start_();\n    });\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this.promise_.then(null, function () {});\n  }\n  UploadTask.prototype.makeProgressCallback_ = function () {\n    var _this = this;\n    var sizeBefore = this.transferred_;\n    return function (loaded) {\n      return _this.updateProgress_(sizeBefore + loaded);\n    };\n  };\n  UploadTask.prototype.shouldDoResumable_ = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n  UploadTask.prototype.start_ = function () {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this.request_ !== null) {\n      return;\n    }\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  };\n  UploadTask.prototype.resolveToken_ = function (callback) {\n    var _this = this;\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.service_.getAuthToken().then(function (authToken) {\n      switch (_this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n        case InternalTaskState.CANCELING:\n          _this.transition_(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          _this.transition_(InternalTaskState.PAUSED);\n          break;\n      }\n    });\n  };\n  // TODO(andysoto): assert false\n  UploadTask.prototype.createResumable_ = function () {\n    var _this = this;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = createResumableUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n      var createRequest = _this.service_.makeRequest(requestInfo, authToken);\n      _this.request_ = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this.request_ = null;\n        _this.uploadUrl_ = url;\n        _this.needToFetchStatus_ = false;\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n  UploadTask.prototype.fetchStatus_ = function () {\n    var _this = this;\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this.service_, _this.location_, url, _this.blob_);\n      var statusRequest = _this.service_.makeRequest(requestInfo, authToken);\n      _this.request_ = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this.request_ = null;\n        _this.updateProgress_(status.current);\n        _this.needToFetchStatus_ = false;\n        if (status.finalized) {\n          _this.needToFetchMetadata_ = true;\n        }\n        _this.completeTransitions_();\n      }, _this.errorHandler_);\n    });\n  };\n  UploadTask.prototype.continueUpload_ = function () {\n    var _this = this;\n    var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\n    var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    var url = this.uploadUrl_;\n    this.resolveToken_(function (authToken) {\n      var requestInfo;\n      try {\n        requestInfo = continueResumableUpload(_this.location_, _this.service_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\n      } catch (e) {\n        _this.error_ = e;\n        _this.transition_(InternalTaskState.ERROR);\n        return;\n      }\n      var uploadRequest = _this.service_.makeRequest(requestInfo, authToken);\n      _this.request_ = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this.increaseMultiplier_();\n        _this.request_ = null;\n        _this.updateProgress_(newStatus.current);\n        if (newStatus.finalized) {\n          _this.metadata_ = newStatus.metadata;\n          _this.transition_(InternalTaskState.SUCCESS);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this.errorHandler_);\n    });\n  };\n  UploadTask.prototype.increaseMultiplier_ = function () {\n    var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  };\n  UploadTask.prototype.fetchMetadata_ = function () {\n    var _this = this;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = getMetadata(_this.service_, _this.location_, _this.mappings_);\n      var metadataRequest = _this.service_.makeRequest(requestInfo, authToken);\n      _this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.metadataErrorHandler_);\n    });\n  };\n  UploadTask.prototype.oneShotUpload_ = function () {\n    var _this = this;\n    this.resolveToken_(function (authToken) {\n      var requestInfo = multipartUpload(_this.service_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\n      var multipartRequest = _this.service_.makeRequest(requestInfo, authToken);\n      _this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this.request_ = null;\n        _this.metadata_ = metadata;\n        _this.updateProgress_(_this.blob_.size());\n        _this.transition_(InternalTaskState.SUCCESS);\n      }, _this.errorHandler_);\n    });\n  };\n  UploadTask.prototype.updateProgress_ = function (transferred) {\n    var old = this.transferred_;\n    this.transferred_ = transferred;\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  };\n  UploadTask.prototype.transition_ = function (state) {\n    if (this.state_ === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n    }\n  };\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n    }\n  };\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    get: function () {\n      var externalState = taskStateFromInternalTaskState(this.state_);\n      return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type The type of event to listen for.\r\n   */\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    function typeValidator() {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\n      }\n    }\n    var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';\n    var nextValidator = nullFunctionSpec(true).validator;\n    var observerValidator = looseObjectSpec(null, true).validator;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function nextOrObserverValidator(p) {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n      try {\n        observerValidator(p);\n        var anyDefined = isJustDef(p['next']) || isJustDef(p['error']) || isJustDef(p['complete']);\n        if (!anyDefined) {\n          throw '';\n        }\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n    var specs = [stringSpec(typeValidator), looseObjectSpec(nextOrObserverValidator, true), nullFunctionSpec(true), nullFunctionSpec(true)];\n    validate('on', specs, arguments);\n    var self = this;\n    function makeBinder(specs) {\n      function binder(nextOrObserver, error, complete) {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n        var observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return function () {\n          self.removeObserver_(observer);\n        };\n      }\n      return binder;\n    }\n    function binderNextOrObserverValidator(p) {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n      nextOrObserverValidator(p);\n    }\n    var binderSpecs = [looseObjectSpec(binderNextOrObserverValidator), nullFunctionSpec(true), nullFunctionSpec(true)];\n    var typeOnly = !(isJustDef(nextOrObserver) || isJustDef(error) || isJustDef(completed));\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected The rejection callback.\r\n   */\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n  UploadTask.prototype.addObserver_ = function (observer) {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n  UploadTask.prototype.removeObserver_ = function (observer) {\n    var i = this.observers_.indexOf(observer);\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  };\n  UploadTask.prototype.notifyObservers_ = function () {\n    var _this = this;\n    this.finishPromise_();\n    var observers = this.observers_.slice();\n    observers.forEach(function (observer) {\n      _this.notifyObserver_(observer);\n    });\n  };\n  UploadTask.prototype.finishPromise_ = function () {\n    if (this.resolve_ !== null) {\n      var triggered = true;\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          async(this.resolve_.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this.reject_;\n          async(toCall.bind(null, this.error_))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  };\n  UploadTask.prototype.notifyObserver_ = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this.state_);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this.error_))();\n        }\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n  UploadTask.prototype.resume = function () {\n    validate('resume', [], arguments);\n    var valid = this.state_ === InternalTaskState.PAUSED || this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n  UploadTask.prototype.pause = function () {\n    validate('pause', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING;\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @return True if the operation took effect, false if ignored.\r\n   */\n  UploadTask.prototype.cancel = function () {\n    validate('cancel', [], arguments);\n    var valid = this.state_ === InternalTaskState.RUNNING || this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n    return valid;\n  };\n  return UploadTask;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\nvar Reference = /** @class */function () {\n  function Reference(service, location) {\n    this.service = service;\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * @return The URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n  Reference.prototype.toString = function () {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  };\n  Reference.prototype.newRef = function (service, location) {\n    return new Reference(service, location);\n  };\n  Reference.prototype.mappings = function () {\n    return getMappings();\n  };\n  /**\r\n   * @return A reference to the object obtained by\r\n   *     appending childPath, removing any duplicate, beginning, or trailing\r\n   *     slashes.\r\n   */\n  Reference.prototype.child = function (childPath) {\n    validate('child', [stringSpec()], arguments);\n    var newPath = child(this.location.path, childPath);\n    var location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.service, location);\n  };\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * @return A reference to the parent of the\r\n     *     current object, or null if the current object is the root.\r\n     */\n    get: function () {\n      var newPath = parent(this.location.path);\n      if (newPath === null) {\n        return null;\n      }\n      var location = new Location(this.location.bucket, newPath);\n      return this.newRef(this.service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * @return An reference to the root of this\r\n     *     object's bucket.\r\n     */\n    get: function () {\n      var location = new Location(this.location.bucket, '');\n      return this.newRef(this.service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    get: function () {\n      return this.location.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    get: function () {\n      return this.location.path;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    get: function () {\n      return lastComponent(this.location.path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    get: function () {\n      return this.service;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data The blob to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n  Reference.prototype.put = function (data, metadata) {\n    if (metadata === void 0) {\n      metadata = null;\n    }\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data), metadata);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value The string to upload.\r\n   * @param format The format of the string to upload.\r\n   * @return An UploadTask that lets you control and\r\n   *     observe the upload.\r\n   */\n  Reference.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n    validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\n    this.throwIfRoot_('putString');\n    var data = dataFromString(format, value);\n    var metadataClone = Object.assign({}, metadata);\n    if (!isDef(metadataClone['contentType']) && isDef(data.contentType)) {\n      metadataClone['contentType'] = data.contentType;\n    }\n    return new UploadTask(this, this.service, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @return A promise that resolves if the deletion succeeds.\r\n   */\n  Reference.prototype.delete = function () {\n    var _this = this;\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = deleteObject(_this.service, _this.location);\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @return A Promise that resolves with all the items and prefixes under\r\n   *      the current storage reference. `prefixes` contains references to\r\n   *      sub-directories and `items` contains references to objects in this\r\n   *      folder. `nextPageToken` is never returned.\r\n   */\n  Reference.prototype.listAll = function () {\n    validate('listAll', [], arguments);\n    var accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(function () {\n      return accumulator;\n    });\n  };\n  Reference.prototype.listAllHelper = function (accumulator, pageToken) {\n    return __awaiter(this, void 0, void 0, function () {\n      var opt, nextPage;\n      var _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            opt = {\n              // maxResults is 1000 by default.\n              pageToken: pageToken\n            };\n            return [4 /*yield*/, this.list(opt)];\n          case 1:\n            nextPage = _c.sent();\n            (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n            (_b = accumulator.items).push.apply(_b, nextPage.items);\n            if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\n            return [4 /*yield*/, this.listAllHelper(accumulator, nextPage.nextPageToken)];\n          case 2:\n            _c.sent();\n            _c.label = 3;\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure.\r\n   * Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options See ListOptions for details.\r\n   * @return A Promise that resolves with the items and prefixes.\r\n   *      `prefixes` contains references to sub-folders and `items`\r\n   *      contains references to objects in this folder. `nextPageToken`\r\n   *      can be used to get the rest of the results.\r\n   */\n  Reference.prototype.list = function (options) {\n    validate('list', [listOptionSpec(true)], arguments);\n    var self = this;\n    return this.service.getAuthToken().then(function (authToken) {\n      var op = options || {};\n      var requestInfo = list(self.service, self.location, /*delimiter= */'/', op.pageToken, op.maxResults);\n      return self.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   *     A promise that resolves with the metadata for this object. If this\r\n   *     object doesn't exist or metadata cannot be retreived, the promise is\r\n   *     rejected.\r\n   */\n  Reference.prototype.getMetadata = function () {\n    var _this = this;\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = getMetadata(_this.service, _this.location, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata The new metadata for the object.\r\n   *     Only values that have been explicitly set will be changed. Explicitly\r\n   *     setting a value to null will remove the metadata.\r\n   * @return A promise that resolves\r\n   *     with the new metadata for this object.\r\n   *     @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n  Reference.prototype.updateMetadata = function (metadata) {\n    var _this = this;\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = updateMetadata(_this.service, _this.location, metadata, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  };\n  /**\r\n   * @return A promise that resolves with the download\r\n   *     URL for this object.\r\n   */\n  Reference.prototype.getDownloadURL = function () {\n    var _this = this;\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.service.getAuthToken().then(function (authToken) {\n      var requestInfo = getDownloadUrl(_this.service, _this.location, _this.mappings());\n      return _this.service.makeRequest(requestInfo, authToken).getPromise().then(function (url) {\n        if (url === null) {\n          throw noDownloadURL();\n        }\n        return url;\n      });\n    });\n  };\n  Reference.prototype.throwIfRoot_ = function (name) {\n    if (this.location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n  return Reference;\n}();\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\nvar FailRequest = /** @class */function () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n  FailRequest.prototype.cancel = function (_appDelete) {};\n  return FailRequest;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\nfunction start(f,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n  function canceled() {\n    return cancelState === 2;\n  }\n  var triggeredCallback = false;\n  // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function triggerCallback() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n  // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function handler(success) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n    var mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    var waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  var stopped = false;\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\nfunction stop(id) {\n  id(false);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @struct\r\n * @template T\r\n */\nvar NetworkRequest = /** @class */function () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var xhr = status.xhr;\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [\n    // Request Timeout: web server didn't receive full request in time.\n    408,\n    // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\nvar RequestEndStatus = /** @class */function () {\n  function RequestEndStatus(wasSuccessCode, xhr, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!canceled;\n  }\n  return RequestEndStatus;\n}();\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\nfunction addVersionHeader_(headers) {\n  var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n/**\r\n * @template T\r\n */\nfunction makeRequest(requestInfo, appId, authToken, pool) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\nvar StorageService = /** @class */function () {\n  function StorageService(app, authProvider, pool, url) {\n    var _a;\n    this.bucket_ = null;\n    this.appId_ = null;\n    this.deleted_ = false;\n    this.app_ = app;\n    this.authProvider_ = authProvider;\n    this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requests_ = new Set();\n    this.pool_ = pool;\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      this.bucket_ = StorageService.extractBucket_((_a = this.app_) === null || _a === void 0 ? void 0 : _a.options);\n    }\n    this.internals_ = new ServiceInternals(this);\n  }\n  StorageService.extractBucket_ = function (config) {\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n    if (bucketString == null) {\n      return null;\n    }\n    return Location.makeFromBucketSpec(bucketString);\n  };\n  StorageService.prototype.getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var auth, tokenData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            auth = this.authProvider_.getImmediate({\n              optional: true\n            });\n            if (!auth) return [3 /*break*/, 2];\n            return [4 /*yield*/, auth.getToken()];\n          case 1:\n            tokenData = _a.sent();\n            if (tokenData !== null) {\n              return [2 /*return*/, tokenData.accessToken];\n            }\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/, null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n  StorageService.prototype.deleteApp = function () {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requests_.forEach(function (request) {\n      return request.cancel();\n    });\n    this.requests_.clear();\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n   * at the given Location.\r\n   * @param loc The Location.\r\n   * @return A firebaseStorage.Reference.\r\n   */\n  StorageService.prototype.makeStorageReference = function (loc) {\n    return new Reference(this, loc);\n  };\n  StorageService.prototype.makeRequest = function (requestInfo, authToken) {\n    var _this = this;\n    if (!this.deleted_) {\n      var request_1 = makeRequest(requestInfo, this.appId_, authToken, this.pool_);\n      this.requests_.add(request_1);\n      // Request removes itself from set when complete.\n      request_1.getPromise().then(function () {\n        return _this.requests_.delete(request_1);\n      }, function () {\n        return _this.requests_.delete(request_1);\n      });\n      return request_1;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n  StorageService.prototype.ref = function (path) {\n    function validator(path) {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n      if (/^[A-Za-z]+:\\/\\//.test(path)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n    validate('ref', [stringSpec(validator, true)], arguments);\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n    var ref = new Reference(this, this.bucket_);\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n  StorageService.prototype.refFromURL = function (url) {\n    function validator(p) {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n      if (!/^[A-Za-z]+:\\/\\//.test(p)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n      try {\n        Location.makeFromUrl(p);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n    validate('refFromURL', [stringSpec(validator, false)], arguments);\n    return new Reference(this, url);\n  };\n  Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\n    get: function () {\n      return this.maxUploadRetryTime_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StorageService.prototype.setMaxUploadRetryTime = function (time) {\n    validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.maxUploadRetryTime_ = time;\n  };\n  Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\n    get: function () {\n      return this.maxOperationRetryTime_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  StorageService.prototype.setMaxOperationRetryTime = function (time) {\n    validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\n    this.maxOperationRetryTime_ = time;\n  };\n  Object.defineProperty(StorageService.prototype, \"app\", {\n    get: function () {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageService.prototype, \"INTERNAL\", {\n    get: function () {\n      return this.internals_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return StorageService;\n}();\n/**\r\n * @struct\r\n */\nvar ServiceInternals = /** @class */function () {\n  function ServiceInternals(service) {\n    this.service_ = service;\n  }\n  /**\r\n   * Called when the associated app is deleted.\r\n   */\n  ServiceInternals.prototype.delete = function () {\n    this.service_.deleteApp();\n    return Promise.resolve();\n  };\n  return ServiceInternals;\n}();\nvar name = \"@firebase/storage\";\nvar version = \"0.3.43\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Type constant for Firebase Storage.\r\n */\nvar STORAGE_TYPE = 'storage';\nfunction factory(container, url) {\n  // Dependencies\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal');\n  return new StorageService(app, authProvider, new XhrIoPool(), url);\n}\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: StorageService,\n    Reference: Reference\n  };\n  instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\nregisterStorage(firebase);\nexport { registerStorage };","map":{"version":3,"names":["DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","FirebaseStorageError","code","message","code_","prependCode","message_","serverResponse_","name_","prototype","codeProp","codeEquals","serverResponseProp","setServerResponseProp","serverResponse","Object","defineProperty","get","Code","UNKNOWN","OBJECT_NOT_FOUND","BUCKET_NOT_FOUND","PROJECT_NOT_FOUND","QUOTA_EXCEEDED","UNAUTHENTICATED","UNAUTHORIZED","RETRY_LIMIT_EXCEEDED","INVALID_CHECKSUM","CANCELED","INVALID_EVENT_NAME","INVALID_URL","INVALID_DEFAULT_BUCKET","NO_DEFAULT_BUCKET","CANNOT_SLICE_BLOB","SERVER_FILE_WRONG_SIZE","NO_DOWNLOAD_URL","INVALID_ARGUMENT","INVALID_ARGUMENT_COUNT","APP_DELETED","INVALID_ROOT_OPERATION","INVALID_FORMAT","INTERNAL_ERROR","unknown","objectNotFound","path","quotaExceeded","bucket","unauthenticated","unauthorized","retryLimitExceeded","canceled","invalidUrl","url","invalidDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","index","fnName","invalidArgumentCount","argMin","argMax","real","countPart","plural","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","formatValidator","stringFormat","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","value","b","i","length","c","charCodeAt","push","valid","hi","lo","Uint8Array","percentEncodedBytes_","decoded","decodeURIComponent","e","hasMinus","indexOf","hasUnder","invalidChar","hasPlus","hasSlash","replace","bytes","atob","array","DataURLParts","dataURL","base64","matches","match","middle","endsWith","substring","rest","dataUrl","parts","s","end","longEnough","TaskEvent","STATE_CHANGED","InternalTaskState","RUNNING","PAUSING","PAUSED","SUCCESS","CANCELING","ERROR","TaskState","taskStateFromInternalTaskState","state","isDef","p","isJustDef","isFunction","isObject","isNonNullObject","isNonArrayObject","Array","isArray","isString","String","isInteger","isNumber","Number","isNativeBlob","isNativeBlobDefined","Blob","ErrorCode","NetworkXhrIo","_this","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","method","body","headers","open","key","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","undefined","getBlob","args","_i","arguments","bb","append","Error","sliceBlob","blob","start","webkitSlice","mozSlice","slice","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","set","size_","type_","startByte","endByte","realBlob","sliced","buffer","blobby","map","val","apply","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","Location","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","bucketDomain","gsModify","loc","charAt","gsPath","gsRegex","RegExp","gsIndices","httpModify","version","firebaseStorageHost","firebaseStoragePath","firebaseStorageRegExp","firebaseStorageIndices","cloudStorageHost","cloudStoragePath","cloudStorageRegExp","cloudStorageIndices","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","jsonObjectOrNull","obj","JSON","parse","parent","lastIndexOf","newPath","child","childPath","canonicalChildPath","split","filter","component","join","lastComponent","makeUrl","urlPart","makeQueryString","params","queryPart","nextPart","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","_metadata","nameMapping","xformSize","sizeMapping","addRef","service","generateRef","makeStorageReference","fromResource","resource","len","mapping","fromResourceString","resourceString","downloadUrlFromResourceString","tokens","tokensList","urls","token","base","queryString","alt","toResourceString","stringify","metadataValidator","MAX_RESULTS_KEY","MAX_MAX_RESULTS","PAGE_TOKEN_KEY","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","fromResponseString","listOptionsValidator","RequestInfo","handler","timeout","urlParams","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","listHandler","downloadUrlHandler","sharedErrorHandler","err","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","list","delimiter","pageToken","maxResults","isRoot","getDownloadUrl","updateMetadata","deleteObject","_xhr","_text","determineContentType_","metadataForUpload_","metadataClone","assign","multipartUpload","genBoundary","str","Math","random","boundary","metadata_","metadataString","preBlobPart","postBlobPart","maxUploadRetryTime","ResumableUploadStatus","current","total","finalized","checkResumeHeader_","allowed","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","isNaN","resumableUploadChunkSize","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","Observer","nextOrObserver","error","complete","asFunctions","next","observer","UploadTaskSnapshot","bytesTransferred","totalBytes","task","ref","validate","specs","passed","minArgs","maxArgs","optional","validLength","validator","ArgSpec","self","and_","v1","v2","stringSpec","stringValidator","chainedValidator","uploadDataSpec","metadataSpec","listOptionSpec","nonNegativeNumberSpec","looseObjectSpec","isLooseObjectValidator","isLooseObject","nullFunctionSpec","async","f","argsToForward","then","UploadTask","transferred_","needToFetchStatus_","needToFetchMetadata_","observers_","error_","uploadUrl_","request_","chunkMultiplier_","resolve_","reject_","ref_","service_","location_","blob_","resumable_","shouldDoResumable_","state_","errorHandler_","completeTransitions_","transition_","metadataErrorHandler_","promise_","reject","start_","makeProgressCallback_","sizeBefore","loaded","updateProgress_","createResumable_","fetchStatus_","fetchMetadata_","continueUpload_","oneShotUpload_","resolveToken_","callback","getAuthToken","authToken","createRequest","makeRequest","getPromise","statusRequest","uploadRequest","newStatus","increaseMultiplier_","currentSize","metadataRequest","multipartRequest","transferred","old","notifyObservers_","cancel","wasPaused","externalState","on","completed","typeValidator","nextOrObserverMessage","nextValidator","observerValidator","nextOrObserverValidator","anyDefined","makeBinder","binder","addObserver_","removeObserver_","binderNextOrObserverValidator","binderSpecs","typeOnly","onFulfilled","onRejected","catch","notifyObserver_","splice","finishPromise_","observers","triggered","bind","snapshot","toCall","resume","pause","Reference","newRef","put","throwIfRoot_","putString","delete","listAll","accumulator","listAllHelper","opt","nextPage","sent","options","op","getDownloadURL","FailRequest","_appDelete","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","call","__spreadArrays","mustStop","waitMillis","stopped","stop","wasTimeout","clearTimeout","id","NetworkRequest","errorCallback","pool","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","doTheRequest","backoffCallback","RequestEndStatus","progressListener","progressEvent","lengthComputable","hitServer","isRetryStatusCode_","wasCanceled","successCode","backoffDone","requestWentThrough","wasSuccessCode","result","appDelete","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","addVersionHeader_","firebase","SDK_VERSION","addGmpidHeader_","appId","StorageService","app","authProvider","bucket_","appId_","deleted_","app_","authProvider_","maxOperationRetryTime_","maxUploadRetryTime_","requests_","Set","extractBucket_","internals_","ServiceInternals","config","auth","getImmediate","getToken","tokenData","accessToken","deleteApp","request","clear","request_1","add","test","refFromURL","setMaxUploadRetryTime","time","setMaxOperationRetryTime","STORAGE_TYPE","factory","container","getProvider","registerStorage","instance","namespaceExports","Storage","INTERNAL","registerComponent","Component","setServiceProps","setMultipleInstances","registerVersion"],"sources":["../src/implementation/constants.ts","../src/implementation/error.ts","../src/implementation/string.ts","../src/implementation/taskenums.ts","../src/implementation/type.ts","../src/implementation/xhrio.ts","../src/implementation/xhrio_network.ts","../src/implementation/xhriopool.ts","../src/implementation/fs.ts","../src/implementation/blob.ts","../src/implementation/location.ts","../src/implementation/json.ts","../src/implementation/path.ts","../src/implementation/url.ts","../src/implementation/metadata.ts","../src/implementation/list.ts","../src/implementation/requestinfo.ts","../src/implementation/requests.ts","../src/implementation/observer.ts","../src/tasksnapshot.ts","../src/implementation/args.ts","../src/implementation/async.ts","../src/task.ts","../src/reference.ts","../src/implementation/failrequest.ts","../src/implementation/backoff.ts","../src/implementation/request.ts","../src/service.ts","../index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\nexport class FirebaseStorageError implements Error {\n  private code_: string;\n  private message_: string;\n  private serverResponse_: string | null;\n  private name_: string;\n\n  constructor(code: Code, message: string) {\n    this.code_ = prependCode(code);\n    this.message_ = 'Firebase Storage: ' + message;\n    this.serverResponse_ = null;\n    this.name_ = 'FirebaseError';\n  }\n\n  codeProp(): string {\n    return this.code;\n  }\n\n  codeEquals(code: Code): boolean {\n    return prependCode(code) === this.codeProp();\n  }\n\n  serverResponseProp(): string | null {\n    return this.serverResponse_;\n  }\n\n  setServerResponseProp(serverResponse: string | null): void {\n    this.serverResponse_ = serverResponse;\n  }\n\n  get name(): string {\n    return this.name_;\n  }\n\n  get code(): string {\n    return this.code_;\n  }\n\n  get message(): string {\n    if (this.serverResponse_) {\n      return this.message_ + '\\n' + this.serverResponse_;\n    } else {\n      return this.message_;\n    }\n  }\n\n  get serverResponse(): null | string {\n    return this.serverResponse_;\n  }\n}\n\nexport const errors = {};\n\n/**\n * @enum {string}\n */\nexport type Code = string;\nexport const Code = {\n  // Shared between all platforms\n  UNKNOWN: 'unknown',\n  OBJECT_NOT_FOUND: 'object-not-found',\n  BUCKET_NOT_FOUND: 'bucket-not-found',\n  PROJECT_NOT_FOUND: 'project-not-found',\n  QUOTA_EXCEEDED: 'quota-exceeded',\n  UNAUTHENTICATED: 'unauthenticated',\n  UNAUTHORIZED: 'unauthorized',\n  RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\n  INVALID_CHECKSUM: 'invalid-checksum',\n  CANCELED: 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME: 'invalid-event-name',\n  INVALID_URL: 'invalid-url',\n  INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET: 'no-default-bucket',\n  CANNOT_SLICE_BLOB: 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\n  NO_DOWNLOAD_URL: 'no-download-url',\n  INVALID_ARGUMENT: 'invalid-argument',\n  INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\n  APP_DELETED: 'app-deleted',\n  INVALID_ROOT_OPERATION: 'invalid-root-operation',\n  INVALID_FORMAT: 'invalid-format',\n  INTERNAL_ERROR: 'internal-error'\n};\n\nexport function prependCode(code: Code): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): FirebaseStorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new FirebaseStorageError(Code.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): FirebaseStorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\n}\n\nexport function unauthorized(path: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\nexport function invalidArgument(\n  index: number,\n  fnName: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT,\n    'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message\n  );\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): FirebaseStorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new FirebaseStorageError(\n    Code.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name The name of the operation that was invalid.\n */\nexport function invalidRootOperation(name: string): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format The format that was not valid.\n * @param message A message describing the format violation.\n */\nexport function invalidFormat(\n  format: string,\n  message: string\n): FirebaseStorageError {\n  return new FirebaseStorageError(\n    Code.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message A message describing the internal error.\n */\nexport function internalError(message: string): FirebaseStorageError {\n  throw new FirebaseStorageError(\n    Code.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\n\n/**\n * @enum {string}\n */\nexport type StringFormat = string;\nexport const StringFormat = {\n  RAW: 'raw',\n  BASE64: 'base64',\n  BASE64URL: 'base64url',\n  DATA_URL: 'data_url'\n};\n\nexport function formatValidator(stringFormat: unknown): void {\n  switch (stringFormat) {\n    case StringFormat.RAW:\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n    case StringFormat.DATA_URL:\n      return;\n    default:\n      throw (\n        'Expected one of the event types: [' +\n        StringFormat.RAW +\n        ', ' +\n        StringFormat.BASE64 +\n        ', ' +\n        StringFormat.BASE64URL +\n        ', ' +\n        StringFormat.DATA_URL +\n        '].'\n      );\n  }\n}\n\n/**\n * @struct\n */\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw errorsExports.unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw errorsExports.invalidFormat(\n      StringFormat.DATA_URL,\n      'Malformed data URL.'\n    );\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw errorsExports.invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw errorsExports.invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw errorsExports.invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\n/**\n * @struct\n */\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw errorsExports.invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * Enum for task events.\n * @enum {string}\n */\nexport type TaskEvent = string;\nexport const TaskEvent = {\n  /** Triggered whenever the task changes or progress is updated. */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n * @enum {string}\n */\nexport type InternalTaskState = string;\nexport const InternalTaskState = {\n  RUNNING: 'running',\n  PAUSING: 'pausing',\n  PAUSED: 'paused',\n  SUCCESS: 'success',\n  CANCELING: 'canceling',\n  CANCELED: 'canceled',\n  ERROR: 'error'\n};\n\n/**\n * External (API-surfaced) enum for task state.\n * @enum {string}\n */\nexport type TaskState = string;\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @return False if the object is undefined or null, true otherwise.\n */\nexport function isDef<T>(p: T | null | undefined): p is T {\n  return p != null;\n}\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isObject(p: unknown): p is { [key: string]: unknown } | null {\n  return typeof p === 'object';\n}\n\nexport function isNonNullObject(p: unknown): p is object {\n  return isObject(p) && p !== null;\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return isObject(p) && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isInteger(p: unknown): p is number {\n  return isNumber(p) && Number.isInteger(p);\n}\n\nexport function isNumber(p: unknown): p is number {\n  return typeof p === 'number' || p instanceof Number;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n */\n\nexport interface Headers {\n  [name: string]: string | number;\n}\n\nexport interface XhrIo {\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<XhrIo>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponseText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * @enum{number}\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport * as type from './type';\nimport { Headers, XhrIo, ErrorCode } from './xhrio';\n\n/**\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\n * doesn't work in React Native on Android.\n */\nexport class NetworkXhrIo implements XhrIo {\n  private xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<XhrIo>;\n  private sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(this);\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve(this);\n      });\n    });\n  }\n\n  /**\n   * @override\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<XhrIo> {\n    if (this.sent_) {\n      throw errorsExports.internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (type.isDef(headers)) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (type.isDef(body)) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  /**\n   * @override\n   */\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw errorsExports.internalError(\n        'cannot .getErrorCode() before sending'\n      );\n    }\n    return this.errorCode_;\n  }\n\n  /**\n   * @override\n   */\n  getStatus(): number {\n    if (!this.sent_) {\n      throw errorsExports.internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  getResponseText(): string {\n    if (!this.sent_) {\n      throw errorsExports.internalError(\n        'cannot .getResponseText() before sending'\n      );\n    }\n    return this.xhr_.responseText;\n  }\n\n  /**\n   * Aborts the request.\n   * @override\n   */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  /**\n   * @override\n   */\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  /**\n   * @override\n   */\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (type.isDef(this.xhr_.upload)) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  /**\n   * @override\n   */\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (type.isDef(this.xhr_.upload)) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Replacement for goog.net.XhrIoPool that works with fbs.XhrIo.\n */\nimport { XhrIo } from './xhrio';\nimport { NetworkXhrIo } from './xhrio_network';\n\n/**\n * Factory-like class for creating XhrIo instances.\n */\nexport class XhrIoPool {\n  createXhrIo(): XhrIo {\n    return new NetworkXhrIo();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport * as type from './type';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (type.isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw Error(\"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport * as fs from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport * as type from './type';\n\n/**\n * @param opt_elideCopy If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (type.isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (type.isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = fs.sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (type.isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(fs.getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (type.isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\nimport * as errorsExports from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * @struct\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw errorsExports.invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      '(?:storage.googleapis.com|storage.cloud.google.com)';\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw errorsExports.invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (type.isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { DEFAULT_HOST } from './constants';\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(urlPart: string): string {\n  return `https://${DEFAULT_HOST}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport * as json from './json';\nimport { Location } from './location';\nimport * as path from './path';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { Reference } from '../reference';\nimport { StorageService } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\n/**\n * @struct\n */\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!type.isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return path.lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size: number | string | undefined\n  ): number | undefined {\n    if (type.isDef(size)) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: StorageService): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service.makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: StorageService,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: StorageService,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string\n): string | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!type.isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = UrlUtils.makeUrl(urlPart);\n    const queryString = UrlUtils.makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Metadata,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n\nexport function metadataValidator(p: unknown): void {\n  if (!type.isObject(p) || !p) {\n    throw 'Expected Metadata object.';\n  }\n  for (const key in p) {\n    if (p.hasOwnProperty(key)) {\n      const val = p[key];\n      if (key === 'customMetadata') {\n        if (!type.isObject(val)) {\n          throw 'Expected object for \\'customMetadata\\' mapping.';\n        }\n      } else {\n        if (type.isNonNullObject(val)) {\n          throw \"Mapping for '\" + key + \"' cannot be an object.\";\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the listOptions and listResult format\n */\nimport { Location } from './location';\nimport * as json from './json';\nimport * as type from './type';\nimport { ListResult } from '../list';\nimport { StorageService } from '../service';\n\n/**\n * Represents the simplified object metadata returned by List API.\n * Other fields are filtered because list in Firebase Rules does not grant\n * the permission to read the metadata.\n */\ninterface ListMetadataResponse {\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON response of List API.\n */\ninterface ListResultResponse {\n  prefixes: string[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\nconst MAX_RESULTS_KEY = 'maxResults';\nconst MAX_MAX_RESULTS = 1000;\nconst PAGE_TOKEN_KEY = 'pageToken';\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(\n  service: StorageService,\n  bucket: string,\n  resource: ListResultResponse\n): ListResult {\n  const listResult: ListResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      const reference = service.makeStorageReference(\n        new Location(bucket, pathWithoutTrailingSlash)\n      );\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = service.makeStorageReference(\n        new Location(bucket, item['name'])\n      );\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\n\nexport function fromResponseString(\n  service: StorageService,\n  bucket: string,\n  resourceString: string\n): ListResult | null {\n  const obj = json.jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = (obj as unknown) as ListResultResponse;\n  return fromBackendResponse(service, bucket, resource);\n}\n\nexport function listOptionsValidator(p: unknown): void {\n  if (!type.isObject(p) || !p) {\n    throw 'Expected ListOptions object.';\n  }\n  for (const key in p) {\n    if (key === MAX_RESULTS_KEY) {\n      if (\n        !type.isInteger(p[MAX_RESULTS_KEY]) ||\n        (p[MAX_RESULTS_KEY] as number) <= 0\n      ) {\n        throw 'Expected maxResults to be a positive number.';\n      }\n      if ((p[MAX_RESULTS_KEY] as number) > 1000) {\n        throw `Expected maxResults to be less than or equal to ${MAX_MAX_RESULTS}.`;\n      }\n    } else if (key === PAGE_TOKEN_KEY) {\n      if (p[PAGE_TOKEN_KEY] && !type.isString(p[PAGE_TOKEN_KEY])) {\n        throw 'Expected pageToken to be string.';\n      }\n    } else {\n      throw 'Unknown option: ' + key;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Headers, XhrIo } from './xhrio';\n\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\nexport class RequestInfo<T> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n\n  errorHandler:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: (p1: XhrIo, p2: string) => T,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  FirebaseStorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown\n} from './error';\nimport { Location } from './location';\nimport * as MetadataUtils from './metadata';\nimport * as ListResultUtils from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { XhrIo } from './xhrio';\nimport { StorageService } from '../service';\n\n/**\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: StorageService,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => Metadata {\n  function handler(xhr: XhrIo, text: string): Metadata {\n    const metadata = MetadataUtils.fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: StorageService,\n  bucket: string\n): (p1: XhrIo, p2: string) => ListResult {\n  function handler(xhr: XhrIo, text: string): ListResult {\n    const listResult = ListResultUtils.fromResponseString(\n      service,\n      bucket,\n      text\n    );\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: StorageService,\n  mappings: MetadataUtils.Mappings\n): (p1: XhrIo, p2: string) => string | null {\n  function handler(xhr: XhrIo, text: string): string | null {\n    const metadata = MetadataUtils.fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return MetadataUtils.downloadUrlFromResourceString(\n      metadata as Metadata,\n      text\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: XhrIo,\n    err: FirebaseStorageError\n  ): FirebaseStorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.setServerResponseProp(err.serverResponseProp());\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: StorageService,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: StorageService,\n  location: Location,\n  metadata: Metadata,\n  mappings: MetadataUtils.Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'PATCH';\n  const body = MetadataUtils.toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: StorageService,\n  location: Location\n): RequestInfo<void> {\n  const urlPart = location.fullServerUrl();\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: XhrIo, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\nexport function multipartUpload(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = MetadataUtils.toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n * @struct\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(xhr: XhrIo, allowed?: string[]): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: StorageService,\n  location: Location,\n  mappings: MetadataUtils.Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = UrlUtils.makeUrl(urlPart);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = MetadataUtils.toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: XhrIo): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(type.isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: StorageService,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: XhrIo): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const resumableUploadChunkSize: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: StorageService,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: MetadataUtils.Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr: XhrIo, text: string): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as type from './type';\nimport { FirebaseStorageError } from './error';\n\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error | FirebaseStorageError) => void;\nexport type CompleteFn = () => void;\nexport type Unsubscribe = () => void;\n\nexport interface StorageObserver<T> {\n  next?: NextFn<T> | null;\n  error?: ErrorFn | null;\n  complete?: CompleteFn | null;\n}\n\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T> | null,\n  error?: ErrorFn | null,\n  complete?: CompleteFn | null\n) => Unsubscribe;\n\n/**\n * @struct\n */\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T> | null;\n  error?: ErrorFn | null;\n  complete?: CompleteFn | null;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T> | null,\n    error?: ErrorFn | null,\n    complete?: CompleteFn | null\n  ) {\n    const asFunctions =\n      type.isFunction(nextOrObserver) ||\n      type.isDef(error) ||\n      type.isDef(complete);\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T> | null;\n      this.error = error || null;\n      this.complete = complete || null;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T> | null;\n        error?: ErrorFn | null;\n        complete?: CompleteFn | null;\n      };\n      this.next = observer.next || null;\n      this.error = observer.error || null;\n      this.complete = observer.complete || null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TaskState } from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport { Reference } from './reference';\nimport { UploadTask } from './task';\n\nexport class UploadTaskSnapshot {\n  constructor(\n    readonly bytesTransferred: number,\n    readonly totalBytes: number,\n    readonly state: TaskState,\n    readonly metadata: Metadata | null,\n    readonly task: UploadTask,\n    readonly ref: Reference\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as errorsExports from './error';\nimport * as MetadataUtils from './metadata';\nimport * as ListOptionsUtils from './list';\nimport * as type from './type';\n\n/**\n * @param name Name of the function.\n * @param specs Argument specs.\n * @param passed The actual arguments passed to the function.\n * @throws {fbs.Error} If the arguments are invalid.\n */\nexport function validate(\n  name: string,\n  specs: ArgSpec[],\n  passed: IArguments\n): void {\n  let minArgs = specs.length;\n  const maxArgs = specs.length;\n  for (let i = 0; i < specs.length; i++) {\n    if (specs[i].optional) {\n      minArgs = i;\n      break;\n    }\n  }\n  const validLength = minArgs <= passed.length && passed.length <= maxArgs;\n  if (!validLength) {\n    throw errorsExports.invalidArgumentCount(\n      minArgs,\n      maxArgs,\n      name,\n      passed.length\n    );\n  }\n  for (let i = 0; i < passed.length; i++) {\n    try {\n      specs[i].validator(passed[i]);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw errorsExports.invalidArgument(i, name, e.message);\n      } else {\n        throw errorsExports.invalidArgument(i, name, e);\n      }\n    }\n  }\n}\n\n/**\n * @struct\n */\nexport class ArgSpec {\n  validator: (p1: unknown) => void;\n  optional: boolean;\n\n  constructor(validator: (p1: unknown) => void, optional?: boolean) {\n    const self = this;\n    this.validator = function (p: unknown) {\n      if (self.optional && !type.isJustDef(p)) {\n        return;\n      }\n      validator(p);\n    };\n    this.optional = !!optional;\n  }\n}\n\nexport function and_(\n  v1: (p1: unknown) => void,\n  v2: (p1: unknown) => void\n): (p1: unknown) => void {\n  return function (p) {\n    v1(p);\n    v2(p);\n  };\n}\n\nexport function stringSpec(\n  validator?: (p1: unknown) => void | null,\n  optional?: boolean\n): ArgSpec {\n  function stringValidator(p: unknown): void {\n    if (!type.isString(p)) {\n      throw 'Expected string.';\n    }\n  }\n  let chainedValidator;\n  if (validator) {\n    chainedValidator = and_(stringValidator, validator);\n  } else {\n    chainedValidator = stringValidator;\n  }\n  return new ArgSpec(chainedValidator, optional);\n}\n\nexport function uploadDataSpec(): ArgSpec {\n  function validator(p: unknown): void {\n    const valid =\n      p instanceof Uint8Array ||\n      p instanceof ArrayBuffer ||\n      (type.isNativeBlobDefined() && p instanceof Blob);\n    if (!valid) {\n      throw 'Expected Blob or File.';\n    }\n  }\n  return new ArgSpec(validator);\n}\n\nexport function metadataSpec(optional?: boolean): ArgSpec {\n  return new ArgSpec(MetadataUtils.metadataValidator, optional);\n}\n\nexport function listOptionSpec(optional?: boolean): ArgSpec {\n  return new ArgSpec(ListOptionsUtils.listOptionsValidator, optional);\n}\n\nexport function nonNegativeNumberSpec(): ArgSpec {\n  function validator(p: unknown): void {\n    const valid = type.isNumber(p) && p >= 0;\n    if (!valid) {\n      throw 'Expected a number 0 or greater.';\n    }\n  }\n  return new ArgSpec(validator);\n}\n\nexport function looseObjectSpec(\n  validator?: ((p1: unknown) => void) | null,\n  optional?: boolean\n): ArgSpec {\n  function isLooseObjectValidator(p: unknown): void {\n    const isLooseObject = p === null || (type.isDef(p) && p instanceof Object);\n    if (!isLooseObject) {\n      throw 'Expected an Object.';\n    }\n    if (validator !== undefined && validator !== null) {\n      validator(p);\n    }\n  }\n  return new ArgSpec(isLooseObjectValidator, optional);\n}\n\nexport function nullFunctionSpec(optional?: boolean): ArgSpec {\n  function validator(p: unknown): void {\n    const valid = p === null || type.isFunction(p);\n    if (!valid) {\n      throw 'Expected a Function.';\n    }\n  }\n  return new ArgSpec(validator, optional);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport { FirebaseStorageError, Code, canceled } from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Observer,\n  StorageObserver,\n  Subscribe,\n  Unsubscribe\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot } from './tasksnapshot';\nimport {\n  ArgSpec,\n  nullFunctionSpec,\n  looseObjectSpec,\n  stringSpec,\n  validate\n} from './implementation/args';\nimport { async as fbsAsync } from './implementation/async';\nimport { Location } from './implementation/location';\nimport * as fbsMetadata from './implementation/metadata';\nimport * as fbsRequests from './implementation/requests';\nimport * as typeUtils from './implementation/type';\nimport { Reference } from './reference';\nimport { StorageService } from './service';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n */\nexport class UploadTask {\n  private ref_: Reference;\n  private service_: StorageService;\n  private location_: Location;\n  private blob_: FbsBlob;\n  private metadata_: Metadata | null;\n  private mappings_: fbsMetadata.Mappings;\n  private transferred_: number = 0;\n  private needToFetchStatus_: boolean = false;\n  private needToFetchMetadata_: boolean = false;\n  private observers_: Array<Observer<UploadTaskSnapshot>> = [];\n  private resumable_: boolean;\n  private state_: InternalTaskState;\n  private error_: Error | null = null;\n  private uploadUrl_: string | null = null;\n  private request_: Request<unknown> | null = null;\n  private chunkMultiplier_: number = 1;\n  private errorHandler_: (p1: FirebaseStorageError) => void;\n  private metadataErrorHandler_: (p1: FirebaseStorageError) => void;\n  private resolve_: ((p1: UploadTaskSnapshot) => void) | null = null;\n  private reject_: ((p1: Error) => void) | null = null;\n  private promise_: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob The blob to upload.\n   */\n  constructor(\n    ref: Reference,\n    service: StorageService,\n    location: Location,\n    mappings: fbsMetadata.Mappings,\n    blob: FbsBlob,\n    metadata: Metadata | null = null\n  ) {\n    this.ref_ = ref;\n    this.service_ = service;\n    this.location_ = location;\n    this.blob_ = blob;\n    this.metadata_ = metadata;\n    this.mappings_ = mappings;\n    this.resumable_ = this.shouldDoResumable_(this.blob_);\n    this.state_ = InternalTaskState.RUNNING;\n    this.errorHandler_ = error => {\n      this.request_ = null;\n      this.chunkMultiplier_ = 1;\n      if (error.codeEquals(Code.CANCELED)) {\n        this.needToFetchStatus_ = true;\n        this.completeTransitions_();\n      } else {\n        this.error_ = error;\n        this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.metadataErrorHandler_ = error => {\n      this.request_ = null;\n      if (error.codeEquals(Code.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this.error_ = error;\n        this.transition_(InternalTaskState.ERROR);\n      }\n    };\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      this.start_();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this.promise_.then(null, () => {});\n  }\n\n  private makeProgressCallback_(): (p1: number, p2: number) => void {\n    const sizeBefore = this.transferred_;\n    return loaded => this.updateProgress_(sizeBefore + loaded);\n  }\n\n  private shouldDoResumable_(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private start_(): void {\n    if (this.state_ !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this.request_ !== null) {\n      return;\n    }\n    if (this.resumable_) {\n      if (this.uploadUrl_ === null) {\n        this.createResumable_();\n      } else {\n        if (this.needToFetchStatus_) {\n          this.fetchStatus_();\n        } else {\n          if (this.needToFetchMetadata_) {\n            // Happens if we miss the metadata on upload completion.\n            this.fetchMetadata_();\n          } else {\n            this.continueUpload_();\n          }\n        }\n      }\n    } else {\n      this.oneShotUpload_();\n    }\n  }\n\n  private resolveToken_(callback: (p1: string | null) => void): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.service_.getAuthToken().then(authToken => {\n      switch (this.state_) {\n        case InternalTaskState.RUNNING:\n          callback(authToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this.transition_(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this.transition_(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private createResumable_(): void {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.createResumableUpload(\n        this.service_,\n        this.location_,\n        this.mappings_,\n        this.blob_,\n        this.metadata_\n      );\n      const createRequest = this.service_.makeRequest(requestInfo, authToken);\n      this.request_ = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this.request_ = null;\n        this.uploadUrl_ = url;\n        this.needToFetchStatus_ = false;\n        this.completeTransitions_();\n      }, this.errorHandler_);\n    });\n  }\n\n  private fetchStatus_(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this.uploadUrl_ as string;\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.getResumableUploadStatus(\n        this.service_,\n        this.location_,\n        url,\n        this.blob_\n      );\n      const statusRequest = this.service_.makeRequest(requestInfo, authToken);\n      this.request_ = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as fbsRequests.ResumableUploadStatus;\n        this.request_ = null;\n        this.updateProgress_(status.current);\n        this.needToFetchStatus_ = false;\n        if (status.finalized) {\n          this.needToFetchMetadata_ = true;\n        }\n        this.completeTransitions_();\n      }, this.errorHandler_);\n    });\n  }\n\n  private continueUpload_(): void {\n    const chunkSize =\n      fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n    const status = new fbsRequests.ResumableUploadStatus(\n      this.transferred_,\n      this.blob_.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this.uploadUrl_ as string;\n    this.resolveToken_(authToken => {\n      let requestInfo;\n      try {\n        requestInfo = fbsRequests.continueResumableUpload(\n          this.location_,\n          this.service_,\n          url,\n          this.blob_,\n          chunkSize,\n          this.mappings_,\n          status,\n          this.makeProgressCallback_()\n        );\n      } catch (e) {\n        this.error_ = e;\n        this.transition_(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this.service_.makeRequest(requestInfo, authToken);\n      this.request_ = uploadRequest;\n      uploadRequest\n        .getPromise()\n        .then((newStatus: fbsRequests.ResumableUploadStatus) => {\n          this.increaseMultiplier_();\n          this.request_ = null;\n          this.updateProgress_(newStatus.current);\n          if (newStatus.finalized) {\n            this.metadata_ = newStatus.metadata;\n            this.transition_(InternalTaskState.SUCCESS);\n          } else {\n            this.completeTransitions_();\n          }\n        }, this.errorHandler_);\n    });\n  }\n\n  private increaseMultiplier_(): void {\n    const currentSize =\n      fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this.chunkMultiplier_ *= 2;\n    }\n  }\n\n  private fetchMetadata_(): void {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.getMetadata(\n        this.service_,\n        this.location_,\n        this.mappings_\n      );\n      const metadataRequest = this.service_.makeRequest(requestInfo, authToken);\n      this.request_ = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this.request_ = null;\n        this.metadata_ = metadata;\n        this.transition_(InternalTaskState.SUCCESS);\n      }, this.metadataErrorHandler_);\n    });\n  }\n\n  private oneShotUpload_(): void {\n    this.resolveToken_(authToken => {\n      const requestInfo = fbsRequests.multipartUpload(\n        this.service_,\n        this.location_,\n        this.mappings_,\n        this.blob_,\n        this.metadata_\n      );\n      const multipartRequest = this.service_.makeRequest(\n        requestInfo,\n        authToken\n      );\n      this.request_ = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this.request_ = null;\n        this.metadata_ = metadata;\n        this.updateProgress_(this.blob_.size());\n        this.transition_(InternalTaskState.SUCCESS);\n      }, this.errorHandler_);\n    });\n  }\n\n  private updateProgress_(transferred: number): void {\n    const old = this.transferred_;\n    this.transferred_ = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this.transferred_ !== old) {\n      this.notifyObservers_();\n    }\n  }\n\n  private transition_(state: InternalTaskState): void {\n    if (this.state_ === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this.state_ = state;\n        if (this.request_ !== null) {\n          this.request_.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this.state_ === InternalTaskState.PAUSED;\n        this.state_ = state;\n        if (wasPaused) {\n          this.notifyObservers_();\n          this.start_();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.error_ = canceled();\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this.state_ = state;\n        this.notifyObservers_();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this.state_) {\n      case InternalTaskState.PAUSING:\n        this.transition_(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this.transition_(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this.start_();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this.state_);\n    return new UploadTaskSnapshot(\n      this.transferred_,\n      this.blob_.size(),\n      externalState,\n      this.metadata_,\n      this,\n      this.ref_\n    );\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type The type of event to listen for.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | NextFn<UploadTaskSnapshot>\n      | StorageObserver<UploadTaskSnapshot>\n      | null,\n    error?: ErrorFn | null,\n    completed?: CompleteFn | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    function typeValidator(): void {\n      if (type !== TaskEvent.STATE_CHANGED) {\n        throw `Expected one of the event types: [${TaskEvent.STATE_CHANGED}].`;\n      }\n    }\n    const nextOrObserverMessage =\n      'Expected a function or an Object with one of ' +\n      '`next`, `error`, `complete` properties.';\n    const nextValidator = nullFunctionSpec(true).validator;\n    const observerValidator = looseObjectSpec(null, true).validator;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function nextOrObserverValidator(p: any): void {\n      try {\n        nextValidator(p);\n        return;\n      } catch (e) {}\n      try {\n        observerValidator(p);\n        const anyDefined =\n          typeUtils.isJustDef(p['next']) ||\n          typeUtils.isJustDef(p['error']) ||\n          typeUtils.isJustDef(p['complete']);\n        if (!anyDefined) {\n          throw '';\n        }\n        return;\n      } catch (e) {\n        throw nextOrObserverMessage;\n      }\n    }\n    const specs = [\n      stringSpec(typeValidator),\n      looseObjectSpec(nextOrObserverValidator, true),\n      nullFunctionSpec(true),\n      nullFunctionSpec(true)\n    ];\n    validate('on', specs, arguments);\n    const self = this;\n\n    function makeBinder(\n      specs: ArgSpec[] | null\n    ): Subscribe<UploadTaskSnapshot> {\n      function binder(\n        nextOrObserver?:\n          | NextFn<UploadTaskSnapshot>\n          | StorageObserver<UploadTaskSnapshot>\n          | null,\n        error?: ErrorFn | null,\n        complete?: CompleteFn | null\n      ): () => void {\n        if (specs !== null) {\n          validate('on', specs, arguments);\n        }\n        const observer = new Observer(nextOrObserver, error, completed);\n        self.addObserver_(observer);\n        return () => {\n          self.removeObserver_(observer);\n        };\n      }\n      return binder;\n    }\n\n    function binderNextOrObserverValidator(p: unknown): void {\n      if (p === null) {\n        throw nextOrObserverMessage;\n      }\n      nextOrObserverValidator(p);\n    }\n    const binderSpecs = [\n      looseObjectSpec(binderNextOrObserverValidator),\n      nullFunctionSpec(true),\n      nullFunctionSpec(true)\n    ];\n    const typeOnly = !(\n      typeUtils.isJustDef(nextOrObserver) ||\n      typeUtils.isJustDef(error) ||\n      typeUtils.isJustDef(completed)\n    );\n    if (typeOnly) {\n      return makeBinder(binderSpecs);\n    } else {\n      return makeBinder(null)(nextOrObserver, error, completed);\n    }\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: Error) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this.promise_.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: Error) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private addObserver_(observer: Observer<UploadTaskSnapshot>): void {\n    this.observers_.push(observer);\n    this.notifyObserver_(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private removeObserver_(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this.observers_.indexOf(observer);\n    if (i !== -1) {\n      this.observers_.splice(i, 1);\n    }\n  }\n\n  private notifyObservers_(): void {\n    this.finishPromise_();\n    const observers = this.observers_.slice();\n    observers.forEach(observer => {\n      this.notifyObserver_(observer);\n    });\n  }\n\n  private finishPromise_(): void {\n    if (this.resolve_ !== null) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this.state_)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this.resolve_.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this.reject_ as (p1: Error) => void;\n          fbsAsync(toCall.bind(null, this.error_ as Error))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this.resolve_ = null;\n        this.reject_ = null;\n      }\n    }\n  }\n\n  private notifyObserver_(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this.state_);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(observer.error.bind(observer, this.error_ as Error))();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(observer.error.bind(observer, this.error_ as Error))();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    validate('resume', [], arguments);\n    const valid =\n      this.state_ === InternalTaskState.PAUSED ||\n      this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    validate('pause', [], arguments);\n    const valid = this.state_ === InternalTaskState.RUNNING;\n    if (valid) {\n      this.transition_(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @return True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    validate('cancel', [], arguments);\n    const valid =\n      this.state_ === InternalTaskState.RUNNING ||\n      this.state_ === InternalTaskState.PAUSING;\n    if (valid) {\n      this.transition_(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase Storage Reference class.\n */\nimport { FbsBlob } from './implementation/blob';\nimport * as errorsExports from './implementation/error';\nimport { Location } from './implementation/location';\nimport * as metadata from './implementation/metadata';\nimport * as path from './implementation/path';\nimport * as requests from './implementation/requests';\nimport {\n  StringFormat,\n  formatValidator,\n  dataFromString\n} from './implementation/string';\nimport * as type from './implementation/type';\nimport { Metadata } from './metadata';\nimport { StorageService } from './service';\nimport { UploadTask } from './task';\nimport { ListOptions, ListResult } from './list';\nimport {\n  listOptionSpec,\n  stringSpec,\n  validate,\n  metadataSpec,\n  uploadDataSpec\n} from './implementation/args';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @param location An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  protected location: Location;\n\n  constructor(protected service: StorageService, location: string | Location) {\n    if (location instanceof Location) {\n      this.location = location;\n    } else {\n      this.location = Location.makeFromUrl(location);\n    }\n  }\n\n  /**\n   * @return The URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    validate('toString', [], arguments);\n    return 'gs://' + this.location.bucket + '/' + this.location.path;\n  }\n\n  protected newRef(service: StorageService, location: Location): Reference {\n    return new Reference(service, location);\n  }\n\n  protected mappings(): metadata.Mappings {\n    return metadata.getMappings();\n  }\n\n  /**\n   * @return A reference to the object obtained by\n   *     appending childPath, removing any duplicate, beginning, or trailing\n   *     slashes.\n   */\n  child(childPath: string): Reference {\n    validate('child', [stringSpec()], arguments);\n    const newPath = path.child(this.location.path, childPath);\n    const location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.service, location);\n  }\n\n  /**\n   * @return A reference to the parent of the\n   *     current object, or null if the current object is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = path.parent(this.location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this.location.bucket, newPath);\n    return this.newRef(this.service, location);\n  }\n\n  /**\n   * @return An reference to the root of this\n   *     object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this.location.bucket, '');\n    return this.newRef(this.service, location);\n  }\n\n  get bucket(): string {\n    return this.location.bucket;\n  }\n\n  get fullPath(): string {\n    return this.location.path;\n  }\n\n  get name(): string {\n    return path.lastComponent(this.location.path);\n  }\n\n  get storage(): StorageService {\n    return this.service;\n  }\n\n  /**\n   * Uploads a blob to this object's location.\n   * @param data The blob to upload.\n   * @return An UploadTask that lets you control and\n   *     observe the upload.\n   */\n  put(\n    data: Blob | Uint8Array | ArrayBuffer,\n    metadata: Metadata | null = null\n  ): UploadTask {\n    validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\n    this.throwIfRoot_('put');\n    return new UploadTask(\n      this,\n      this.service,\n      this.location,\n      this.mappings(),\n      new FbsBlob(data),\n      metadata\n    );\n  }\n\n  /**\n   * Uploads a string to this object's location.\n   * @param value The string to upload.\n   * @param format The format of the string to upload.\n   * @return An UploadTask that lets you control and\n   *     observe the upload.\n   */\n  putString(\n    value: string,\n    format: StringFormat = StringFormat.RAW,\n    metadata?: Metadata\n  ): UploadTask {\n    validate(\n      'putString',\n      [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)],\n      arguments\n    );\n    this.throwIfRoot_('putString');\n    const data = dataFromString(format, value);\n    const metadataClone = Object.assign({}, metadata);\n    if (\n      !type.isDef(metadataClone['contentType']) &&\n      type.isDef(data.contentType)\n    ) {\n      metadataClone['contentType'] = data.contentType!;\n    }\n    return new UploadTask(\n      this,\n      this.service,\n      this.location,\n      this.mappings(),\n      new FbsBlob(data.data, true),\n      metadataClone\n    );\n  }\n\n  /**\n   * Deletes the object at this location.\n   * @return A promise that resolves if the deletion succeeds.\n   */\n  delete(): Promise<void> {\n    validate('delete', [], arguments);\n    this.throwIfRoot_('delete');\n    return this.service.getAuthToken().then(authToken => {\n      const requestInfo = requests.deleteObject(this.service, this.location);\n      return this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * List all items (files) and prefixes (folders) under this storage reference.\n   *\n   * This is a helper method for calling list() repeatedly until there are\n   * no more results. The default pagination size is 1000.\n   *\n   * Note: The results may not be consistent if objects are changed while this\n   * operation is running.\n   *\n   * Warning: listAll may potentially consume too many resources if there are\n   * too many results.\n   *\n   * @return A Promise that resolves with all the items and prefixes under\n   *      the current storage reference. `prefixes` contains references to\n   *      sub-directories and `items` contains references to objects in this\n   *      folder. `nextPageToken` is never returned.\n   */\n  listAll(): Promise<ListResult> {\n    validate('listAll', [], arguments);\n    const accumulator = {\n      prefixes: [],\n      items: []\n    };\n    return this.listAllHelper(accumulator).then(() => accumulator);\n  }\n\n  private async listAllHelper(\n    accumulator: ListResult,\n    pageToken?: string\n  ): Promise<void> {\n    const opt: ListOptions = {\n      // maxResults is 1000 by default.\n      pageToken\n    };\n    const nextPage = await this.list(opt);\n    accumulator.prefixes.push(...nextPage.prefixes);\n    accumulator.items.push(...nextPage.items);\n    if (nextPage.nextPageToken != null) {\n      await this.listAllHelper(accumulator, nextPage.nextPageToken);\n    }\n  }\n\n  /**\n   * List items (files) and prefixes (folders) under this storage reference.\n   *\n   * List API is only available for Firebase Rules Version 2.\n   *\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n   * delimited folder structure.\n   * Refer to GCS's List API if you want to learn more.\n   *\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n   * support objects whose paths end with \"/\" or contain two consecutive\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n   * list() may fail if there are too many unsupported objects in the bucket.\n   *\n   * @param options See ListOptions for details.\n   * @return A Promise that resolves with the items and prefixes.\n   *      `prefixes` contains references to sub-folders and `items`\n   *      contains references to objects in this folder. `nextPageToken`\n   *      can be used to get the rest of the results.\n   */\n  list(options?: ListOptions | null): Promise<ListResult> {\n    validate('list', [listOptionSpec(true)], arguments);\n    const self = this;\n    return this.service.getAuthToken().then(authToken => {\n      const op = options || {};\n      const requestInfo = requests.list(\n        self.service,\n        self.location,\n        /*delimiter= */ '/',\n        op.pageToken,\n        op.maxResults\n      );\n      return self.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   *     A promise that resolves with the metadata for this object. If this\n   *     object doesn't exist or metadata cannot be retreived, the promise is\n   *     rejected.\n   */\n  getMetadata(): Promise<Metadata> {\n    validate('getMetadata', [], arguments);\n    this.throwIfRoot_('getMetadata');\n    return this.service.getAuthToken().then(authToken => {\n      const requestInfo = requests.getMetadata(\n        this.service,\n        this.location,\n        this.mappings()\n      );\n      return this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * Updates the metadata for this object.\n   * @param metadata The new metadata for the object.\n   *     Only values that have been explicitly set will be changed. Explicitly\n   *     setting a value to null will remove the metadata.\n   * @return A promise that resolves\n   *     with the new metadata for this object.\n   *     @see firebaseStorage.Reference.prototype.getMetadata\n   */\n  updateMetadata(metadata: Metadata): Promise<Metadata> {\n    validate('updateMetadata', [metadataSpec()], arguments);\n    this.throwIfRoot_('updateMetadata');\n    return this.service.getAuthToken().then(authToken => {\n      const requestInfo = requests.updateMetadata(\n        this.service,\n        this.location,\n        metadata,\n        this.mappings()\n      );\n      return this.service.makeRequest(requestInfo, authToken).getPromise();\n    });\n  }\n\n  /**\n   * @return A promise that resolves with the download\n   *     URL for this object.\n   */\n  getDownloadURL(): Promise<string> {\n    validate('getDownloadURL', [], arguments);\n    this.throwIfRoot_('getDownloadURL');\n    return this.service.getAuthToken().then(authToken => {\n      const requestInfo = requests.getDownloadUrl(\n        this.service,\n        this.location,\n        this.mappings()\n      );\n      return this.service\n        .makeRequest(requestInfo, authToken)\n        .getPromise()\n        .then(url => {\n          if (url === null) {\n            throw errorsExports.noDownloadURL();\n          }\n          return url;\n        });\n    });\n  }\n\n  private throwIfRoot_(name: string): void {\n    if (this.location.path === '') {\n      throw errorsExports.invalidRootOperation(name);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FirebaseStorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n * @struct\n * @template T\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: FirebaseStorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) => void, canceled: boolean) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\n  // the no-explicit-any rule when ESlint releases it.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function handler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport firebase from '@firebase/app';\nimport * as backoff from './backoff';\nimport {\n  FirebaseStorageError,\n  unknown,\n  appDeleted,\n  canceled,\n  retryLimitExceeded\n} from './error';\nimport { RequestInfo } from './requestinfo';\nimport * as type from './type';\nimport * as UrlUtils from './url';\nimport { Headers, XhrIo, ErrorCode } from './xhrio';\nimport { XhrIoPool } from './xhriopool';\n\n/**\n * @template T\n */\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * @struct\n * @template T\n */\nclass NetworkRequest<T> implements Request<T> {\n  private url_: string;\n  private method_: string;\n  private headers_: Headers;\n  private body_: string | Blob | Uint8Array | null;\n  private successCodes_: number[];\n  private additionalRetryCodes_: number[];\n  private pendingXhr_: XhrIo | null = null;\n  private backoffId_: backoff.id | null = null;\n  private resolve_!: (value?: T | PromiseLike<T> | undefined) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private callback_: (p1: XhrIo, p2: string) => T;\n  private errorCallback_:\n    | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n    | null;\n  private progressCallback_: ((p1: number, p2: number) => void) | null;\n  private timeout_: number;\n  private pool_: XhrIoPool;\n  promise_: Promise<T>;\n\n  constructor(\n    url: string,\n    method: string,\n    headers: Headers,\n    body: string | Blob | Uint8Array | null,\n    successCodes: number[],\n    additionalRetryCodes: number[],\n    callback: (p1: XhrIo, p2: string) => T,\n    errorCallback:\n      | ((p1: XhrIo, p2: FirebaseStorageError) => FirebaseStorageError)\n      | null,\n    timeout: number,\n    progressCallback: ((p1: number, p2: number) => void) | null,\n    pool: XhrIoPool\n  ) {\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const self = this;\n\n    function doTheRequest(\n      backoffCallback: (p1: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ): void {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent: ProgressEvent): void {\n        const loaded = progressEvent.loaded;\n        const total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      xhr\n        .send(self.url_, self.method_, self.body_, self.headers_)\n        .then((xhr: XhrIo) => {\n          if (self.progressCallback_ !== null) {\n            xhr.removeUploadProgressListener(progressListener);\n          }\n          self.pendingXhr_ = null;\n          xhr = xhr as XhrIo;\n          const hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = xhr.getStatus();\n          if (!hitServer || self.isRetryStatusCode_(status)) {\n            const wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = self.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, xhr));\n        });\n    }\n\n    /**\n     * @param requestWentThrough True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    function backoffDone(\n      requestWentThrough: boolean,\n      status: RequestEndStatus\n    ): void {\n      const resolve = self.resolve_;\n      const reject = self.reject_;\n      const xhr = status.xhr as XhrIo;\n      if (status.wasSuccessCode) {\n        try {\n          const result = self.callback_(xhr, xhr.getResponseText());\n          if (type.isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          const err = unknown();\n          err.setServerResponseProp(xhr.getResponseText());\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = backoff.start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      backoff.stop(this.backoffId_);\n    }\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode =\n      this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled Defaults to false.\n * @struct\n */\nexport class RequestEndStatus {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public xhr: XhrIo | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(headers: Headers): void {\n  const version =\n    typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\n/**\n * @template T\n */\nexport function makeRequest<T>(\n  requestInfo: RequestInfo<T>,\n  appId: string | null,\n  authToken: string | null,\n  pool: XhrIoPool\n): Request<T> {\n  const queryPart = UrlUtils.makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers);\n  return new NetworkRequest<T>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    pool\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport * as args from './implementation/args';\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { XhrIoPool } from './implementation/xhriopool';\nimport { Reference } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { FirebaseOptions } from '@firebase/app-types-exp';\nimport * as constants from '../src/implementation/constants';\nimport * as errorsExports from './implementation/error';\n\n/**\n * A service that provides firebaseStorage.Reference instances.\n * @param opt_url gs:// url to a custom Storage Bucket\n *\n * @struct\n */\nexport class StorageService {\n  private app_: FirebaseApp | null;\n  private readonly bucket_: Location | null = null;\n  private readonly internals_: ServiceInternals;\n  private readonly authProvider_: Provider<FirebaseAuthInternalName>;\n  private readonly appId_: string | null = null;\n  private readonly pool_: XhrIoPool;\n  private readonly requests_: Set<Request<unknown>>;\n  private deleted_: boolean = false;\n  private maxOperationRetryTime_: number;\n  private maxUploadRetryTime_: number;\n\n  constructor(\n    app: FirebaseApp | null,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    pool: XhrIoPool,\n    url?: string\n  ) {\n    this.app_ = app;\n    this.authProvider_ = authProvider;\n    this.maxOperationRetryTime_ = constants.DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this.maxUploadRetryTime_ = constants.DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this.requests_ = new Set();\n    this.pool_ = pool;\n    if (url != null) {\n      this.bucket_ = Location.makeFromBucketSpec(url);\n    } else {\n      this.bucket_ = StorageService.extractBucket_(this.app_?.options);\n    }\n    this.internals_ = new ServiceInternals(this);\n  }\n\n  private static extractBucket_(config?: FirebaseOptions): Location | null {\n    const bucketString = config?.[constants.CONFIG_STORAGE_BUCKET_KEY];\n    if (bucketString == null) {\n      return null;\n    }\n    return Location.makeFromBucketSpec(bucketString);\n  }\n\n  async getAuthToken(): Promise<string | null> {\n    const auth = this.authProvider_.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  deleteApp(): void {\n    this.deleted_ = true;\n    this.app_ = null;\n    this.requests_.forEach(request => request.cancel());\n    this.requests_.clear();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   * @param loc The Location.\n   * @return A firebaseStorage.Reference.\n   */\n  makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  makeRequest<T>(\n    requestInfo: RequestInfo<T>,\n    authToken: string | null\n  ): Request<T> {\n    if (!this.deleted_) {\n      const request = makeRequest(\n        requestInfo,\n        this.appId_,\n        authToken,\n        this.pool_\n      );\n      this.requests_.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this.requests_.delete(request),\n        () => this.requests_.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(errorsExports.appDeleted());\n    }\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference for the given path in the default\n   * bucket.\n   */\n  ref(path?: string): Reference {\n    function validator(path: unknown): void {\n      if (typeof path !== 'string') {\n        throw 'Path is not a string.';\n      }\n      if (/^[A-Za-z]+:\\/\\//.test(path as string)) {\n        throw 'Expected child path but got a URL, use refFromURL instead.';\n      }\n    }\n    args.validate('ref', [args.stringSpec(validator, true)], arguments);\n    if (this.bucket_ == null) {\n      throw new Error('No Storage Bucket defined in Firebase Options.');\n    }\n\n    const ref = new Reference(this, this.bucket_);\n    if (path != null) {\n      return ref.child(path);\n    } else {\n      return ref;\n    }\n  }\n\n  /**\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\n   * which must be a gs:// or http[s]:// URL.\n   */\n  refFromURL(url: string): Reference {\n    function validator(p: unknown): void {\n      if (typeof p !== 'string') {\n        throw 'Path is not a string.';\n      }\n      if (!/^[A-Za-z]+:\\/\\//.test(p as string)) {\n        throw 'Expected full URL but got a child path, use ref instead.';\n      }\n      try {\n        Location.makeFromUrl(p as string);\n      } catch (e) {\n        throw 'Expected valid full URL but got an invalid one.';\n      }\n    }\n    args.validate('refFromURL', [args.stringSpec(validator, false)], arguments);\n    return new Reference(this, url);\n  }\n\n  get maxUploadRetryTime(): number {\n    return this.maxUploadRetryTime_;\n  }\n\n  setMaxUploadRetryTime(time: number): void {\n    args.validate(\n      'setMaxUploadRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.maxUploadRetryTime_ = time;\n  }\n\n  get maxOperationRetryTime(): number {\n    return this.maxOperationRetryTime_;\n  }\n\n  setMaxOperationRetryTime(time: number): void {\n    args.validate(\n      'setMaxOperationRetryTime',\n      [args.nonNegativeNumberSpec()],\n      arguments\n    );\n    this.maxOperationRetryTime_ = time;\n  }\n\n  get app(): FirebaseApp | null {\n    return this.app_;\n  }\n\n  get INTERNAL(): ServiceInternals {\n    return this.internals_;\n  }\n}\n\n/**\n * @struct\n */\nexport class ServiceInternals {\n  service_: StorageService;\n\n  constructor(service: StorageService) {\n    this.service_ = service;\n  }\n\n  /**\n   * Called when the associated app is deleted.\n   */\n  delete(): Promise<void> {\n    this.service_.deleteApp();\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { StringFormat } from './src/implementation/string';\nimport { TaskEvent, TaskState } from './src/implementation/taskenums';\n\nimport { XhrIoPool } from './src/implementation/xhriopool';\nimport { Reference } from './src/reference';\nimport { StorageService } from './src/service';\nimport * as types from '@firebase/storage-types';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer\n} from '@firebase/component';\n\nimport { name, version } from './package.json';\n\n/**\n * Type constant for Firebase Storage.\n */\nconst STORAGE_TYPE = 'storage';\n\nfunction factory(\n  container: ComponentContainer,\n  url?: string\n): types.FirebaseStorage {\n  // Dependencies\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n\n  return (new StorageService(\n    app,\n    authProvider,\n    new XhrIoPool(),\n    url\n  ) as unknown) as types.FirebaseStorage;\n}\n\nexport function registerStorage(instance: _FirebaseNamespace): void {\n  const namespaceExports = {\n    // no-inline\n    TaskState,\n    TaskEvent,\n    StringFormat,\n    Storage: StorageService,\n    Reference\n  };\n  instance.INTERNAL.registerComponent(\n    new Component(STORAGE_TYPE, factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior for `registerStorage`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    storage?: {\n      (app?: FirebaseApp): types.FirebaseStorage;\n      Storage: typeof types.FirebaseStorage;\n\n      StringFormat: {\n        BASE64: types.StringFormat;\n        BASE64URL: types.StringFormat;\n        DATA_URL: types.StringFormat;\n        RAW: types.StringFormat;\n      };\n      TaskEvent: {\n        STATE_CHANGED: types.TaskEvent;\n      };\n      TaskState: {\n        CANCELED: types.TaskState;\n        ERROR: types.TaskState;\n        PAUSED: types.TaskState;\n        RUNNING: types.TaskState;\n        SUCCESS: types.TaskState;\n      };\n    };\n  }\n  interface FirebaseApp {\n    storage?(storageBucket?: string): types.FirebaseStorage;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}